name: Tests

on:
  push:
    # This should disable running the workflow on tags, according to the
    # on.<push|pull_request>.<branches|tags> GitHub Actions docs.
    branches:
      - "*"
  pull_request:
  schedule:
    - cron: '48 6 * * *'

concurrency:
  # Cancel older requests of the same workflow in the same branch.
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:

  linux:  # {{{
    runs-on: ubuntu-latest
    if: true

    strategy:
      fail-fast: false
      matrix:
        include:
          # Test different combinations of Python, Postgres, libpq.
          - {impl: python, python: "3.10", postgres: "postgres:14"}

    env:
      PSYCOPG_IMPL: ${{ matrix.impl }}
      DEPS: ./psycopg[test] ./psycopg_pool
      PSYCOPG_TEST_DSN: "host=127.0.0.1 user=postgres password=password"
      MARKERS: ""
      TMNET_DEV_API_KEY: ${{ secrets.TMNET_DEV_API_KEY }}
      TMNET_API_KEY: ${{ secrets.TMNET_API_KEY }}

      # Enable to run tests using the minimum version of dependencies.
      # PIP_CONSTRAINT: ${{ github.workspace }}/tests/constraints.txt

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Start PostgreSQL service
        # Note: this would love to be a service, but I don't see a way to pass
        # the args to the docker run command line.
        run: |
          docker pull ${{ matrix.postgres }}
          docker run --rm -d --name postgres -p 5432:5432 \
            -e POSTGRES_PASSWORD=password ${{ matrix.postgres }} \
            -c max_prepared_transactions=10

      - name: Install the wanted libpq version
        run: ./tools/build/ci_install_libpq.sh ${{ matrix.libpq }}

      - name: Include psycopg-c to the packages to install
        if: ${{ matrix.impl == 'c' }}
        run: |
          echo "DEPS=$DEPS ./psycopg_c" >> $GITHUB_ENV

      - name: Include dnspython to the packages to install
        if: ${{ matrix.ext == 'dns' }}
        run: |
          echo "DEPS=$DEPS dnspython" >> $GITHUB_ENV
          echo "MARKERS=$MARKERS dns" >> $GITHUB_ENV

      - name: Include shapely to the packages to install
        if: ${{ matrix.ext == 'postgis' }}
        run: |
          echo "DEPS=$DEPS shapely" >> $GITHUB_ENV
          echo "MARKERS=$MARKERS postgis" >> $GITHUB_ENV

      - name: Install Python packages
        run: pip install $DEPS

      - name: Install pytest-testmon (commit-based)
        run: pip install pytest_testmon@git+https://github.com/tarpas/pytest-testmon.git@2ff397cb459c434ef587bef4e064f0857440a267#egg=pytest_testmon

      - name: Run tests
        run: ./tools/build/ci_test.sh


  # }}}
